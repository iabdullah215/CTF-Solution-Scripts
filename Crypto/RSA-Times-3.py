from Crypto.Util.number import inverse, long_to_bytes
import math

n = 148994132706673484121858332303923263974144719803956200575658651407496530647024722244845386107680158076675550267814873273112786953398162043095335760120197755688779685633888133023330979122742924901160296562357370935160119398915488598993452234808686986914964545402307347645563939050708520863454896425135962814049
e = 65537
ct = 24087775550348765192307231581989199811853037660831326163984570184953719045244350737637690456956149870460132179707241015180718327132739239587433437145926053563325911660357683839504983087062394514698254525176463542779008644141302136742906146330932237945661844202703818089055691145864474253097132330931949637877

p = int(math.isqrt(n))
phi_n = p * (p - 1)
d = inverse(e, phi_n)

for _ in range(3):
    ct = pow(ct, d, n)

flag_bytes = long_to_bytes(ct)

try:
    flag = flag_bytes.decode('utf-8')
    print(flag)
except UnicodeDecodeError:
    print(flag_bytes)
